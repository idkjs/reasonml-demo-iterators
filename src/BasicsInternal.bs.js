// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List  = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");

function ofList(theList, f) {
  var _l = theList;
  while(true) {
    var l = _l;
    if (l) {
      Curry._1(f, l[0]);
      _l = l[1];
      continue ;
      
    } else {
      return /* () */0;
    }
  };
}

function toList(seq) {
  var result = [/* [] */0];
  Curry._1(seq, (function (x) {
          result[0] = /* :: */[
            x,
            result[0]
          ];
          return /* () */0;
        }));
  return List.rev(result[0]);
}

function length(seq) {
  var result = [0];
  Curry._1(seq, (function () {
          result[0] = result[0] + 1 | 0;
          return /* () */0;
        }));
  return result[0];
}

function map(f, seqIn) {
  return (function (out) {
      return Curry._1(seqIn, (function (in_) {
                    return Curry._1(out, Curry._1(f, in_));
                  }));
    });
}

function filter(f, seqIn) {
  return (function (out) {
      return Curry._1(seqIn, (function (in_) {
                    var match = Curry._1(f, in_);
                    if (match !== 0) {
                      return Curry._1(out, in_);
                    } else {
                      return /* () */0;
                    }
                  }));
    });
}

function iter(f, seq) {
  return Curry._1(seq, f);
}

exports.ofList = ofList;
exports.toList = toList;
exports.length = length;
exports.map    = map;
exports.filter = filter;
exports.iter   = iter;
/* No side effect */
